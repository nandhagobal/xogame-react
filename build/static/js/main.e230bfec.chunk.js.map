{"version":3,"sources":["components/playArea/playBase/playBase.module.css","components/backdrop/backdrop.module.css","App.module.css","components/heading/headingComponent.module.css","components/playArea/boxRow/boxRow.module.css","logo.svg","components/heading/headingComponent.js","components/playArea/boxRow/boxRow.js","components/backdrop/backdrop.js","components/playArea/playBase/playBase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Heading","className","style","heading","this","props","children","Component","BoxRow","row","value","ind","onClick","e","handler","val","Backdrop","backdrop","button","resetHandler","PlayBase","state","mark","Array","fill","change","win","valueChangeHandler","newArray","target","setState","full","a","b","c","includes","console","log","i","Fragment","info","base","outer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e230bfec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"playBase_base__1Il4a\",\"box\":\"playBase_box__rHwh0\",\"outer\":\"playBase_outer__3tihl\",\"button\":\"playBase_button__1ZRm3\",\"info\":\"playBase_info__21kzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"backdrop_backdrop__1XDWI\",\"button\":\"backdrop_button__Ieymo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"App_outer__37LLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"headingComponent_heading__81Y5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"boxRow_row__25xDZ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\r\nimport style from './headingComponent.module.css'\r\n\r\nclass Heading extends Component{\r\n    render(){\r\n        return(\r\n            <div className={style.heading}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Heading;","import React, { Component } from 'react'\r\nimport style from './boxRow.module.css'\r\n\r\nclass BoxRow extends Component{\r\n    arr;\r\n    render(){\r\n        // console.log(this.props.mark);\r\n        return(\r\n            <button className={style.row} value={this.props.ind} onClick={(e)=>this.props.handler(e)}>\r\n                {this.props.val}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BoxRow;","import React from 'react'\r\nimport style from './backdrop.module.css'\r\n\r\nvar Backdrop=(props)=>{\r\n    return (\r\n        <div className={style.backdrop}>\r\n            {props.children}\r\n            <div>\r\n            <button className={style.button} onClick={props.resetHandler}>New Game</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop;","import React, { Component } from 'react'\r\nimport style from './playBase.module.css'\r\nimport Box from '../boxRow/boxRow'\r\nimport Backdrop from '../../backdrop/backdrop';\r\n\r\nclass PlayBase extends Component{\r\n    state={\r\n        mark:new Array(9).fill(null),\r\n        change:0,\r\n        win:null\r\n    }\r\n    componentDidUpdate(){\r\n        let arr=[...this.state.mark];\r\n        let full=false;\r\n        full=arr.includes(null);\r\n        console.log(full);\r\n        let a,b,c;\r\n        console.log('updating');\r\n        if(full==false && !this.state.win){\r\n            this.setState({\r\n                win:'draw'\r\n            })\r\n        }\r\n        // console.log(this.state.mark[0])\r\n        if(!this.state.win){\r\n        for(var i=0;i<9;i=i+3){\r\n            console.log('inside function')\r\n            a=this.state.mark[i];\r\n            b=this.state.mark[i+1];\r\n            c=this.state.mark[i+2];\r\n            // console.log('row'+a+' '+b+' '+c);\r\n            if(a===b&&b===c&&a&&b&&c){\r\n                this.setState({\r\n                    win:a\r\n                })\r\n                return;\r\n            }\r\n        }\r\n        for(var i=0;i<3;i++){\r\n            a=this.state.mark[i];\r\n            b=this.state.mark[i+3];\r\n            c=this.state.mark[i+6];\r\n            console.log('col'+a+' '+b+' '+c);\r\n            if(a===b&&b===c&&a&&b&&c){\r\n                this.setState({\r\n                    win:a\r\n                })\r\n                return;\r\n            }\r\n        }\r\n        for(var i=0;i<9;i=i+6){\r\n            if(i==6){\r\n            a=this.state.mark[i];\r\n            b=this.state.mark[i-2];\r\n            c=this.state.mark[i-4];\r\n            }\r\n            else{\r\n            a=this.state.mark[i];\r\n            b=this.state.mark[i+4];\r\n            c=this.state.mark[i+8];\r\n            }\r\n            console.log(\"diagonal\"+a+' '+b+' '+c);\r\n            if(a===b&&b===c&&a&&b&&c){\r\n                this.setState({\r\n                    win:a\r\n                })\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    }\r\n    valueChangeHandler=(e)=>{\r\n        let newArray=[...this.state.mark];\r\n        if(newArray[e.target.value]==null)\r\n            newArray[e.target.value]=this.state.change?'O':'X';\r\n        // console.log(newArray);\r\n        else\r\n            return\r\n        this.setState({\r\n            mark:newArray,\r\n            change:!this.state.change\r\n        })\r\n    }\r\n\r\n    resetHandler=()=>{\r\n        this.setState({\r\n            mark:new Array(9).fill(null),\r\n            win:null,\r\n            change:0\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        // console.log(this.state.mark);\r\n        return(\r\n            <React.Fragment>\r\n                <div className={style.info}>\r\n                Next Choice : <span> {this.state.change?\"O\":'X'}</span>\r\n                </div>\r\n            <div className={style.base}>\r\n                 <div className={style.outer}>\r\n                    <Box val={this.state.mark[0]} ind={0} handler={this.valueChangeHandler}></Box>\r\n                    <Box val={this.state.mark[1]} ind={1} handler={this.valueChangeHandler}></Box>\r\n                    <Box val={this.state.mark[2]} ind={2} handler={this.valueChangeHandler}></Box>\r\n                 </div>\r\n                 <div className={style.outer}>\r\n                    <Box val={this.state.mark[3]} ind={3} handler={this.valueChangeHandler}></Box>\r\n                    <Box val={this.state.mark[4]} ind={4} handler={this.valueChangeHandler}></Box>\r\n                    <Box val={this.state.mark[5]} ind={5} handler={this.valueChangeHandler}></Box>\r\n                 </div><div className={style.outer}>\r\n                    <Box val={this.state.mark[6]} ind={6} handler={this.valueChangeHandler}></Box>\r\n                    <Box val={this.state.mark[7]} ind={7} handler={this.valueChangeHandler}></Box>\r\n                    <Box val={this.state.mark[8]} ind={8} handler={this.valueChangeHandler}></Box>\r\n                 </div>\r\n            </div>\r\n            {this.state.win?<Backdrop resetHandler={this.resetHandler}><div>{this.state.win} won the match</div></Backdrop>:null}\r\n            <button className={style.button} onClick={this.resetHandler}>New Game</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayBase;","import React from 'react';\nimport logo from './logo.svg';\nimport style from './App.module.css';\nimport Heading from './components/heading/headingComponent';\nimport PlayBase from './components/playArea/playBase/playBase';\n\nfunction App() {\n  return (\n    <div className={style.outer}>\n      <Heading>Tic Tac Tao</Heading>\n      <PlayBase></PlayBase>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}